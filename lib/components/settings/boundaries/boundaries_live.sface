<div class="flex flex-col gap-1 p-4 pt-0">
  {#if !Bonfire.Classify.ensure_update_allowed(@current_user, @category)}
    {l("Sorry, you cannot edit this group.")}
  {#else}
    <div class="mt-2">
      <div
        x-data="{
          open: false
        }"
        class="p-3 rounded-lg border border-base-content/30"
      >
        <div class="flex items-center justify-between cursor-pointer" x-on:click="open = !open">
          <div class="flex flex-col gap-1">
            <div class="text-base font-bold text-base-content">{l("Edit the main boundary of the group and all future group activities")}
            </div>
          </div>
          <button x-show="!open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronRight" class="w-6 h-6 text-base-content/70" />
          </button>
          <button x-show="open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronDown" class="w-6 h-6 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-cloak x-collapse x-bind:class="open ? '!overflow-visible' : ''">
          <form phx-submit="Bonfire.Classify:reset_preset_boundary">
            <div class="w-full mt-2 form-control">
              <select name="to_boundaries[]" class="select select-bordered">
                <optgroup label={l("Current option")}>
                  {#case @boundary_preset}
                    {#match {"open" = preset, _boundary_name}}
                      <option value="open" selected>{l("Open") <> ": " <> Config.get([:ui, :group, :preset_descriptions, preset], "")}</option>
                    {#match {"visible" = preset, _boundary_name}}
                      <option value="visible" selected>{l("Visible") <> ": " <> Config.get([:ui, :group, :preset_descriptions, preset], "")}</option>
                    {#match {"private" = preset, _boundary_name}}
                      <option value="private" selected>{l("Private") <> ": " <> Config.get([:ui, :group, :preset_descriptions, preset], "")}</option>
                    {#match {id, boundary_name}}
                      <option value={id} selected>{boundary_name}</option>
                    {#match _}
                  {/case}
                </optgroup>
                <optgroup label={l("Other built-in options")}>
                  <option value="open">{l("Open") <> ": " <> Config.get([:ui, :group, :preset_descriptions, "open"], "")}</option>
                  <option value="visible">{l("Visible") <> ": " <> Config.get([:ui, :group, :preset_descriptions, "visible"], "")}</option>
                  <option value="private">{l("Private") <> ": " <> Config.get([:ui, :group, :preset_descriptions, "private"], "")}</option>
                </optgroup>
              </select>
              <button type="submit" class="w-full rounded-full mt-3 normal-case btn btn-primary">
                {l("Edit boundary")}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <div class="mt-2">
      <div
        x-data="{
          open: false
        }"
        class="p-3 rounded-lg border border-base-content/30"
      >
        <div class="flex items-center justify-between cursor-pointer" x-on:click="open = !open">
          <div class="flex flex-col gap-1">
            <div class="text-base font-bold text-base-content">{l("Edit the custom boundary of the group and all future group activities")}</div>
          </div>
          <button x-show="!open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronRight" class="w-6 h-6 text-base-content/70" />
          </button>
          <button x-show="open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronDown" class="w-6 h-6 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-cloak x-collapse x-bind:class="open ? '!overflow-visible' : ''">
          <div class="border border-base-content/10 mt-2 rounded">
            {#case Acls.get_or_create_object_custom_acl(@category, current_user(@__context__))}
              {#match {:ok, acl}}
                <Dynamic.LiveComponent
                  :if={module_enabled?(Bonfire.Boundaries.Web.AclLive)}
                  module={Bonfire.Boundaries.Web.AclLive}
                  setting_boundaries={false}
                  scope={@category}
                  usage={:ops}
                  id={:acl}
                  acl_id={id(acl)}
                  acl={acl}
                />
                <!-- TODO: pass the ACL so it doesn't have to be queried twice -->
              {#match {:error, e}}
                {e}
              {#match _}
                Unknown error
            {/case}
          </div>
        </div>
      </div>
    </div>

    <div class="mt-2">
      <div
        x-data="{
          open: false
        }"
        class="p-3 rounded-lg border border-base-content/30"
      >
        <div class="flex items-center justify-between cursor-pointer" x-on:click="open = !open">
          <div class="flex flex-col gap-1">
            <div class="text-base font-bold text-base-content">{l("Edit roles")}</div>
          </div>
          <button x-show="!open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronRight" class="w-6 h-6 text-base-content/70" />
          </button>
          <button x-show="open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
            <#Icon solid="ChevronDown" class="w-6 h-6 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-cloak x-collapse>
          <div class="border border-base-content/10 mt-2 rounded">
            <Dynamic.LiveComponent
              :if={module_enabled?(Bonfire.Boundaries.Web.RolesLive) and @current_user}
              module={Bonfire.Boundaries.Web.RolesLive}
              id="roles"
              scope={@category}
            />
          </div>
        </div>
      </div>
    </div>
  {/if}
</div>